// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  username String @unique 
  password String
  token String @default("") @unique
  posts Post[]
  likes Liked[]
  cart Cart[]
  created_at DateTime @default(now())
}

model Post {
  id Int @id @default(autoincrement())
  title String
  description String?
  price Int
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  images Image[]
  likes Liked[]
  cart Cart[]
  created_at DateTime @default(now())
}

model Image {
  id Int @id @default(autoincrement())
  path String
  postId Int
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Liked {
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId Int
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@id([userId, postId])
}

model Cart {
  userId Int
  postId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@id([userId, postId])
}
